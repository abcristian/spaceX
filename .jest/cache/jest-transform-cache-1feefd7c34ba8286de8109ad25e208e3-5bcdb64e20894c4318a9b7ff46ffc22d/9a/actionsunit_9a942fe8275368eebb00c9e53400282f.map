{"version":3,"sources":["actions.unit.tsx"],"names":["mock","getLaunchesService","jest","fn","mockResolvedValue","describe","dispatch","getState","mockReturnValue","rejectedWithValue","filter","sort","year","test","actions","getLaunches","expect","toHaveBeenCalled","mockRejectedValue","response","data","extraArgument"],"mappings":"AAIA,cAAKA,IAAL,CAAU,QAAV,EAAoB;AAAA,SAAO;AACzBC,IAAAA,kBAAkB,EAAEC,IAAI,CAACC,EAAL,GAAUC,iBAAV,CAA4B,EAA5B;AADK,GAAP;AAAA,CAApB;;;;;;AAHA;;AACA;;;;;;;;;;;;;;;;;AAMAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7B,MAAMC,QAAQ,GAAGJ,IAAI,CAACC,EAAL,EAAjB;AACA,MAAMI,QAAQ,GAAGL,IAAI,CAACC,EAAL,GAAUK,eAAV,CAA0B,EAA1B,CAAjB;AACA,MAAMC,iBAAiB,GAAGP,IAAI,CAACC,EAAL,EAA1B;AAEA,MAAMO,MAAc,GAAG;AAACC,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAAvB;AAEAC,EAAAA,IAAI,CAAC,qBAAD,EAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CACpBC,OAAO,CAACC,WAAR,CAAoBL,MAApB,EAA4BJ,QAA5B,EAAsCC,QAAtC,EAAgD,EAAhD,CADoB;;AAAA;AAE1BS,YAAAA,MAAM,CAACf,uBAAD,CAAN,CAA2BgB,gBAA3B;;AAF0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB,CAAJ;AAIAJ,EAAAA,IAAI,CAAC,mCAAD,EAAsC;AAAA;AAAA;AAAA;AAAA;AACvCZ,mCAAD,CAAkCiB,iBAAlC,CAAoD;AAClDC,cAAAA,QAAQ,EAAE;AAACC,gBAAAA,IAAI,EAAE;AAAP;AADwC,aAApD;;AADwC;AAAA,8CAIlCN,OAAO,CAACC,WAAR,CAAoBL,MAApB,EAA4BJ,QAA5B,EAAsCC,QAAtC,EAAgD;AACpDc,cAAAA,aAAa,EAAE;AAACZ,gBAAAA,iBAAiB,EAAjBA;AAAD;AADqC,aAAhD,CAJkC;;AAAA;AAOxCO,YAAAA,MAAM,CAACf,uBAAD,CAAN,CAA2BgB,gBAA3B;;AAPwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC,CAAJ;AASD,CApBO,CAAR","sourcesContent":["import {Filter} from \"../../filters/reducer\";\nimport * as actions from \"../actions\";\nimport {getLaunchesService} from \"../api\";\n\njest.mock(\"../api\", () => ({\n  getLaunchesService: jest.fn().mockResolvedValue({}),\n}));\n\ndescribe(\"getLaunches \", () => {\n  const dispatch = jest.fn();\n  const getState = jest.fn().mockReturnValue({});\n  const rejectedWithValue = jest.fn();\n\n  const filter: Filter = {sort: \"asc\", year: 2016};\n\n  test(\"execute getLaunches\", async () => {\n    await actions.getLaunches(filter)(dispatch, getState, {});\n    expect(getLaunchesService).toHaveBeenCalled();\n  });\n  test(\"should dispatch getLunchesService\", async () => {\n    (getLaunchesService as jest.Mock).mockRejectedValue({\n      response: {data: \"error\"},\n    });\n    await actions.getLaunches(filter)(dispatch, getState, {\n      extraArgument: {rejectedWithValue},\n    });\n    expect(getLaunchesService).toHaveBeenCalled();\n  });\n});\n"]}