fab234f3616ed3e3057e72d403bc1490
var _reducer = require("../reducer");

describe("Status reducer", function () {
  var initialState = {};
  test("should have a module", function () {
    expect(_reducer.statusReducer).toBeDefined();
  });
  test("should mark testOperation as pending", function () {
    var action = (0, _reducer.statusReducer)(initialState, {
      type: "testOperation/pending"
    });
    expect(action.testOperation).toStrictEqual({
      status: _reducer.PENDING
    });
  });
  test("should mark testOperation as fulfilled", function () {
    var action = (0, _reducer.statusReducer)(initialState, {
      type: "testOperation/fulfilled"
    });
    expect(action.testOperation).toStrictEqual({
      status: _reducer.FULFILLED
    });
  });
  test("should mark testOperation as rejected", function () {
    var action = (0, _reducer.statusReducer)(initialState, {
      payload: {
        detail: "An error"
      },
      type: "testOperation/rejected"
    });
    var expected = {
      detail: "An error",
      status: _reducer.REJECTED
    };
    expect(action.testOperation).toStrictEqual(expected);
  });
  test("should ignore other actions", function () {
    var action = (0, _reducer.statusReducer)(initialState, {
      type: "not me please"
    });
    expect(action).toBe(initialState);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZHVjZXIudW5pdC50c3giXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJpbml0aWFsU3RhdGUiLCJ0ZXN0IiwiZXhwZWN0Iiwic3RhdHVzUmVkdWNlciIsInRvQmVEZWZpbmVkIiwiYWN0aW9uIiwidHlwZSIsInRlc3RPcGVyYXRpb24iLCJ0b1N0cmljdEVxdWFsIiwic3RhdHVzIiwiUEVORElORyIsIkZVTEZJTExFRCIsInBheWxvYWQiLCJkZXRhaWwiLCJleHBlY3RlZCIsIlJFSkVDVEVEIiwidG9CZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBR0FBLFFBQVEsQ0FBQyxnQkFBRCxFQUFtQixZQUFNO0FBQy9CLE1BQU1DLFlBQXlCLEdBQUcsRUFBbEM7QUFFQUMsRUFBQUEsSUFBSSxDQUFDLHNCQUFELEVBQXlCLFlBQU07QUFDakNDLElBQUFBLE1BQU0sQ0FBQ0Msc0JBQUQsQ0FBTixDQUFzQkMsV0FBdEI7QUFDRCxHQUZHLENBQUo7QUFJQUgsRUFBQUEsSUFBSSxDQUFDLHNDQUFELEVBQXlDLFlBQU07QUFDakQsUUFBTUksTUFBTSxHQUFHLDRCQUFjTCxZQUFkLEVBQTRCO0FBQ3pDTSxNQUFBQSxJQUFJLEVBQUU7QUFEbUMsS0FBNUIsQ0FBZjtBQUdBSixJQUFBQSxNQUFNLENBQUNHLE1BQU0sQ0FBQ0UsYUFBUixDQUFOLENBQTZCQyxhQUE3QixDQUEyQztBQUFDQyxNQUFBQSxNQUFNLEVBQUVDO0FBQVQsS0FBM0M7QUFDRCxHQUxHLENBQUo7QUFPQVQsRUFBQUEsSUFBSSxDQUFDLHdDQUFELEVBQTJDLFlBQU07QUFDbkQsUUFBTUksTUFBTSxHQUFHLDRCQUFjTCxZQUFkLEVBQTRCO0FBQ3pDTSxNQUFBQSxJQUFJLEVBQUU7QUFEbUMsS0FBNUIsQ0FBZjtBQUdBSixJQUFBQSxNQUFNLENBQUNHLE1BQU0sQ0FBQ0UsYUFBUixDQUFOLENBQTZCQyxhQUE3QixDQUEyQztBQUFDQyxNQUFBQSxNQUFNLEVBQUVFO0FBQVQsS0FBM0M7QUFDRCxHQUxHLENBQUo7QUFPQVYsRUFBQUEsSUFBSSxDQUFDLHVDQUFELEVBQTBDLFlBQU07QUFDbEQsUUFBTUksTUFBTSxHQUFHLDRCQUFjTCxZQUFkLEVBQTRCO0FBQ3pDWSxNQUFBQSxPQUFPLEVBQUU7QUFDUEMsUUFBQUEsTUFBTSxFQUFFO0FBREQsT0FEZ0M7QUFJekNQLE1BQUFBLElBQUksRUFBRTtBQUptQyxLQUE1QixDQUFmO0FBTUEsUUFBTVEsUUFBUSxHQUFHO0FBQUNELE1BQUFBLE1BQU0sRUFBRSxVQUFUO0FBQXFCSixNQUFBQSxNQUFNLEVBQUVNO0FBQTdCLEtBQWpCO0FBQ0FiLElBQUFBLE1BQU0sQ0FBQ0csTUFBTSxDQUFDRSxhQUFSLENBQU4sQ0FBNkJDLGFBQTdCLENBQTJDTSxRQUEzQztBQUNELEdBVEcsQ0FBSjtBQVdBYixFQUFBQSxJQUFJLENBQUMsNkJBQUQsRUFBZ0MsWUFBTTtBQUN4QyxRQUFNSSxNQUFNLEdBQUcsNEJBQWNMLFlBQWQsRUFBNEI7QUFBQ00sTUFBQUEsSUFBSSxFQUFFO0FBQVAsS0FBNUIsQ0FBZjtBQUNBSixJQUFBQSxNQUFNLENBQUNHLE1BQUQsQ0FBTixDQUFlVyxJQUFmLENBQW9CaEIsWUFBcEI7QUFDRCxHQUhHLENBQUo7QUFJRCxDQXBDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtGVUxGSUxMRUQsIFBFTkRJTkcsIFJFSkVDVEVELCBzdGF0dXNSZWR1Y2VyfSBmcm9tIFwiLi4vcmVkdWNlclwiO1xuaW1wb3J0IHtTdGF0dXNTdGF0ZX0gZnJvbSBcIi4uL3R5cGluZ3NcIjtcblxuZGVzY3JpYmUoXCJTdGF0dXMgcmVkdWNlclwiLCAoKSA9PiB7XG4gIGNvbnN0IGluaXRpYWxTdGF0ZTogU3RhdHVzU3RhdGUgPSB7fTtcblxuICB0ZXN0KFwic2hvdWxkIGhhdmUgYSBtb2R1bGVcIiwgKCkgPT4ge1xuICAgIGV4cGVjdChzdGF0dXNSZWR1Y2VyKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcblxuICB0ZXN0KFwic2hvdWxkIG1hcmsgdGVzdE9wZXJhdGlvbiBhcyBwZW5kaW5nXCIsICgpID0+IHtcbiAgICBjb25zdCBhY3Rpb24gPSBzdGF0dXNSZWR1Y2VyKGluaXRpYWxTdGF0ZSwge1xuICAgICAgdHlwZTogXCJ0ZXN0T3BlcmF0aW9uL3BlbmRpbmdcIixcbiAgICB9KTtcbiAgICBleHBlY3QoYWN0aW9uLnRlc3RPcGVyYXRpb24pLnRvU3RyaWN0RXF1YWwoe3N0YXR1czogUEVORElOR30pO1xuICB9KTtcblxuICB0ZXN0KFwic2hvdWxkIG1hcmsgdGVzdE9wZXJhdGlvbiBhcyBmdWxmaWxsZWRcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGFjdGlvbiA9IHN0YXR1c1JlZHVjZXIoaW5pdGlhbFN0YXRlLCB7XG4gICAgICB0eXBlOiBcInRlc3RPcGVyYXRpb24vZnVsZmlsbGVkXCIsXG4gICAgfSk7XG4gICAgZXhwZWN0KGFjdGlvbi50ZXN0T3BlcmF0aW9uKS50b1N0cmljdEVxdWFsKHtzdGF0dXM6IEZVTEZJTExFRH0pO1xuICB9KTtcblxuICB0ZXN0KFwic2hvdWxkIG1hcmsgdGVzdE9wZXJhdGlvbiBhcyByZWplY3RlZFwiLCAoKSA9PiB7XG4gICAgY29uc3QgYWN0aW9uID0gc3RhdHVzUmVkdWNlcihpbml0aWFsU3RhdGUsIHtcbiAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgZGV0YWlsOiBcIkFuIGVycm9yXCIsXG4gICAgICB9LFxuICAgICAgdHlwZTogXCJ0ZXN0T3BlcmF0aW9uL3JlamVjdGVkXCIsXG4gICAgfSk7XG4gICAgY29uc3QgZXhwZWN0ZWQgPSB7ZGV0YWlsOiBcIkFuIGVycm9yXCIsIHN0YXR1czogUkVKRUNURUR9O1xuICAgIGV4cGVjdChhY3Rpb24udGVzdE9wZXJhdGlvbikudG9TdHJpY3RFcXVhbChleHBlY3RlZCk7XG4gIH0pO1xuXG4gIHRlc3QoXCJzaG91bGQgaWdub3JlIG90aGVyIGFjdGlvbnNcIiwgKCkgPT4ge1xuICAgIGNvbnN0IGFjdGlvbiA9IHN0YXR1c1JlZHVjZXIoaW5pdGlhbFN0YXRlLCB7dHlwZTogXCJub3QgbWUgcGxlYXNlXCJ9KTtcbiAgICBleHBlY3QoYWN0aW9uKS50b0JlKGluaXRpYWxTdGF0ZSk7XG4gIH0pO1xufSk7XG4iXX0=