{"version":3,"sources":["selectors.unit.tsx"],"names":["describe","test","state","status","launches","FULFILLED","expect","Selectors","wasFulfilledSelector","toBe","PENDING","isPendingSelector","REJECTED","wasRejectedSelector"],"mappings":"AACA;;AACA;;;;;;AAEAA,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjCC,EAAAA,IAAI,CAAC,6BAAD,EAAgC,YAAM;AACxC,QAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeD,QAAAA,MAAM,EAAEE;AAAvB;AADI,KAAd;AAIAC,IAAAA,MAAM,CAACC,SAAS,CAACC,oBAAV,CAA+BN,KAA/B,EAAsC,eAAtC,CAAD,CAAN,CAA+DO,IAA/D,CAAoE,IAApE;AACD,GANG,CAAJ;AAOAR,EAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAM;AACtC,QAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeD,QAAAA,MAAM,EAAEO;AAAvB;AADI,KAAd;AAIAJ,IAAAA,MAAM,CAACC,SAAS,CAACI,iBAAV,CAA4BT,KAA5B,EAAmC,uBAAnC,CAAD,CAAN,CAAoEO,IAApE,CACE,IADF;AAGD,GARG,CAAJ;AASAR,EAAAA,IAAI,CAAC,4BAAD,EAA+B,YAAM;AACvC,QAAMC,KAAK,GAAG;AACZC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,EAAX;AAAeD,QAAAA,MAAM,EAAES;AAAvB;AADI,KAAd;AAIAN,IAAAA,MAAM,CAACC,SAAS,CAACM,mBAAV,CAA8BX,KAA9B,EAAqC,eAArC,CAAD,CAAN,CAA8DO,IAA9D,CAAmE,IAAnE;AACD,GANG,CAAJ;AAOD,CAxBO,CAAR","sourcesContent":["import {RootState} from \"../../../redux/configStore\";\nimport {FULFILLED, PENDING, REJECTED} from \"../reducer\";\nimport * as Selectors from \"../selectors\";\n\ndescribe(\"Status selectors\", () => {\n  test(\"should give fulfilled state\", () => {\n    const state = {\n      status: {launches: [], status: FULFILLED},\n    } as unknown as RootState;\n\n    expect(Selectors.wasFulfilledSelector(state, \"testOperation\")).toBe(true);\n  });\n  test(\"should give loading state\", () => {\n    const state = {\n      status: {launches: [], status: PENDING},\n    } as unknown as RootState;\n\n    expect(Selectors.isPendingSelector(state, \"launches/get_launches\")).toBe(\n      true,\n    );\n  });\n  test(\"should give rejected state\", () => {\n    const state = {\n      status: {launches: [], status: REJECTED},\n    } as unknown as RootState;\n\n    expect(Selectors.wasRejectedSelector(state, \"testOperation\")).toBe(true);\n  });\n});\n"]}